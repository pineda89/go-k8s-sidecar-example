kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: go-sidecar-example
  namespace: my-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: go-sidecar-example
      app.kubernetes.io/name: go-sidecar-example
  template:
    metadata:
      labels:
        app.kubernetes.io/component: go-sidecar-example
        app.kubernetes.io/instance: go-sidecar-example
        app.kubernetes.io/name: go-sidecar-example
        app.kubernetes.io/part-of: go-sidecar-example-app
        app.kubernetes.io/version: 1.0.0
    spec:
      nodeSelector:
        b-node-role: memory
      restartPolicy: Always
      containers:
        - resources:
            limits:
              cpu: 200m
              memory: 30Mi
            requests:
              cpu: 20m
              memory: 20Mi
          readinessProbe:
            tcpSocket:
              port: 8080-tcp
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - '-c'
                  - sleep 10
          name: proxy
          livenessProbe:
            tcpSocket:
              port: 8080-tcp
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          env:
            - name: UPSTREAM_URL
              value: 'http://localhost:3000'
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - name: 8080-tcp
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            tcpSocket:
              port: 8080-tcp
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          terminationMessagePolicy: File
          image: >-
            pineda89/go-sidecar-example-proxy
        - resources:
            limits:
              cpu: 800m
              memory: 675Mi
            requests:
              cpu: 80m
              memory: 450Mi
          readinessProbe:
            tcpSocket:
              port: 3000-tcp
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - '-c'
                  - sleep 10
          name: service
          livenessProbe:
            tcpSocket:
              port: 3000-tcp
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          env:
            - name: SERVICE_PORT
              value: '3000'
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - name: 3000-tcp
              containerPort: 3000
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            tcpSocket:
              port: 3000-tcp
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          terminationMessagePolicy: File
          image: >-
            pineda89/go-sidecar-example-service
      dnsPolicy: ClusterFirst
  serviceName: go-sidecar-example-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
